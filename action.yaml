# Copyright 2022-2024 Universität Tübingen, DKFZ and EMBL
# for the German Human Genome-Phenome Archive (GHGA)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'GHGA microservice common action tasks'
description: 'Common tasks that are executed in multiple GH action workflows for GHGA microservices'

inputs:
  python-version:
    description: 'The Python version to use'
    required: false
    default: '3.12'

outputs:
  PACKAGE_NAME:
    description: 'The Name of the microservice package'
    value: ${{ steps.runtime-variables.outputs.PACKAGE_NAME }}
  MAIN_SRC_DIR:
    description: 'The main src directory of the microservice package'
    value: ${{ steps.runtime-variables.outputs.MAIN_SRC_DIR }}
  CONFIG_YAML_ENV_VAR_NAME:
    description: 'The name of the environment variable pointing to the config YAML file'
    value: ${{ steps.runtime-variables.outputs.CONFIG_YAML_ENV_VAR_NAME }}
  CONFIG_YAML:
    description: 'The config YAML file'
    value: ${{ steps.runtime-variables.outputs.CONFIG_YAML }}

runs:
  using: 'composite'

  steps:

      - name: Get and export important runtime variables
        id: runtime-variables
        shell: bash
        run: |
          PACKAGE_NAME="$(./scripts/get_package_name.py)"
          MAIN_SRC_DIR="${PWD}/src/${PACKAGE_NAME}"
          CONFIG_YAML_ENV_VAR_NAME="$( echo $PACKAGE_NAME | tr 'a-z' 'A-Z' | sed "s/-/_/g" )_CONFIG_YAML"
          CONFIG_YAML="${PWD}/.devcontainer/.dev_config.yaml"
          # attach all other variables to the step's output:
          echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_OUTPUT
          echo "MAIN_SRC_DIR=${MAIN_SRC_DIR}" >> $GITHUB_OUTPUT
          echo "CONFIG_YAML_ENV_VAR_NAME=${CONFIG_YAML_ENV_VAR_NAME}" >> $GITHUB_OUTPUT
          echo "CONFIG_YAML=${CONFIG_YAML}" >> $GITHUB_OUTPUT

      - name: Set up Python ${{ inputs.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '${{ inputs.python-version }}'

      - name: Install Dependencies
        id: install-dependencies
        shell: bash
        env:
          PIP_OPTIONS: --no-deps --disable-pip-version-check
          # Note: We use pip with the --no-deps option to install only the dependencies
          # that are listed in our lock files. If pip tries to install other packages,
          # it is not guaranteed that we always get the same environment.
        run: |
          pip install $PIP_OPTIONS -r ./lock/requirements-dev.txt
          pip install $PIP_OPTIONS .

